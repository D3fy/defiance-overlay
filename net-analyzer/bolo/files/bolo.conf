# Example bolo.conf

# What address and port to bind on, and listen for inbound data
# submission from monitored hosts.  Note: if you wish to specify
# a single interface, you must specify it as an IP address.
listener tcp://*:2999

# What address and port to bind on, and listen for inbound query
# and control requests from management hosts.  The default bind
# on loopback (127.0.0.1) was chosen for security.
controller tcp://127.0.0.1:2998

# What address and port to bind on, and broadcast data via.
# Subscribers will need to connect to this endpoint to do their jobs.
# As with listener and controller, specific interfaces can be
# bound, but must be specified by IP address.
broadcast tcp://*:2997

# Controls how bolo logs, where it sends log messages, and what messages are allowed to be logged.
#
# The first token is the log level, one of debug, info, notice, warning, error, alert, critical, or emergency.
#
# The second token is the syslog facility to log to, one of daemon, or local0-local7.
log info daemon

# bolo will periodically save its state, counter, sample and
# event data to this file, to avoid data loss in the event of
# application or host outages.
savefile /var/lib/bolo/save.db

# The keysfile is like the savefile, except that user-provided
# configuration data (via KEY statements through send_bolo(1))
# will be written there.
keysfile /var/lib/bolo/keys.db

# When stat_bolo(1) initiates a DUMP to get all of the state,
# event and metric data from bolo, that information is written
# to disk, using this pattern to generate randomized temporary
# files. The first `%s' will be replaced with a random value.
# Subsequent `%s' tokens are ignored.
dumpfiles /var/tmp/mon.%s
