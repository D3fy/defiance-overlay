#!/sbin/runscript
# Copyright 1999-2013 Defiance Linux
# Distributed under the terms of the GNU General Public License v2

ROLE="master"
PID="${RUN_DIR}/${ROLE}.pid"
SOCKET="${RUN_DIR}/${ROLE}.sock"

#command_args="master --pidfile ${pidfile} ${PUPPETMASTER_EXTRA_OPTS}"
#if [ -n "${PUPPETMASTER_PORT}" ] ; then
#	command_args="${command_args} --masterport ${PUPPETMASTER_PORT}"
#fi

depend() {
	need localmount
	use dns logger slapd netmount nfsmount
	provide puppet
}

DAEMON_OPTS="--daemonize \
	--rackup ${RACK} \
	--servers ${SERVERS} \
	-u puppet -g puppet \
	--chdir ${CONF_DIR} \
	-e production \
	--log ${LOG_DIR}/${ROLE}.log \
	--pid ${PID} --socket ${SOCKET}"

start_pre() {
	checkpath --directory --owner puppet:puppet "${RUN_DIR}"
	checkpath --directory --owner puppet:puppet "${CONF_DIR}"
	checkpath --directory --owner puppet:puppet --mode 750 "${LOG_DIR}"
        checkpath --directory --owner puppet:puppet "/var/lib/puppet"	
	checkpath --file --owner puppet:puppet --mode 640 "${LOG_DIR}/masterhttp.log"
}

start() {
	ebegin "Starting Puppetmaster"
	/usr/bin/thin start ${DAEMON_OPTS}
	eend $?
}

stop() {
        ebegin "Stopping Puppetmaster"
        /usr/bin/thin stop ${DAEMON_OPTS}
        eend $?
}

restart() {
        ebegin "Restarting Puppetmaster"
        /usr/bin/thin restart ${DAEMON_OPTS}
        eend $?
}
